[{"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/index.js":"1","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/App.js":"2","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/reportWebVitals.js":"3","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MenuComponent.js":"4","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/dishes.js":"5","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MainComponent.js":"6","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/comments.js":"7","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/DishDetailComponent.js":"8","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HeaderComponent.js":"9","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/FooterComponent.js":"10","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HomeComponent.js":"11","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/ContactComponent.js":"12","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/leaders.js":"13","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/promotions.js":"14","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/AboutComponent.js":"15","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/configureStore.js":"16","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/dishes.js":"17","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/promotions.js":"18","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/leaders.js":"19","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/comments.js":"20","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/ActionCreators.js":"21","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/ActionTypes.js":"22","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/LoadingComponent.js":"23","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/forms.js":"24","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/baseUrl.js":"25"},{"size":639,"mtime":1607931508506,"results":"26","hashOfConfig":"27"},{"size":641,"mtime":1608042362928,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607494129199,"results":"29","hashOfConfig":"27"},{"size":2207,"mtime":1608533184409,"results":"30","hashOfConfig":"27"},{"size":1448,"mtime":1607946652522,"results":"31","hashOfConfig":"27"},{"size":3750,"mtime":1608540638203,"results":"32","hashOfConfig":"27"},{"size":4117,"mtime":1607946746240,"results":"33","hashOfConfig":"27"},{"size":7335,"mtime":1608534979716,"results":"34","hashOfConfig":"27"},{"size":4976,"mtime":1608038347116,"results":"35","hashOfConfig":"27"},{"size":2585,"mtime":1607943756331,"results":"36","hashOfConfig":"27"},{"size":2014,"mtime":1608536298796,"results":"37","hashOfConfig":"27"},{"size":10753,"mtime":1608540712281,"results":"38","hashOfConfig":"27"},{"size":2345,"mtime":1607946720702,"results":"39","hashOfConfig":"27"},{"size":435,"mtime":1607946682758,"results":"40","hashOfConfig":"27"},{"size":4846,"mtime":1608540017919,"results":"41","hashOfConfig":"27"},{"size":762,"mtime":1608484099103,"results":"42","hashOfConfig":"27"},{"size":580,"mtime":1608481796056,"results":"43","hashOfConfig":"27"},{"size":665,"mtime":1608533034386,"results":"44","hashOfConfig":"27"},{"size":690,"mtime":1608536589995,"results":"45","hashOfConfig":"27"},{"size":531,"mtime":1608533932183,"results":"46","hashOfConfig":"27"},{"size":6190,"mtime":1608542203111,"results":"47","hashOfConfig":"27"},{"size":542,"mtime":1608536044670,"results":"48","hashOfConfig":"27"},{"size":247,"mtime":1608483240372,"results":"49","hashOfConfig":"27"},{"size":162,"mtime":1608484046054,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1608532480434,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"17qtlam",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/index.js",[],["107","108"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/App.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/reportWebVitals.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MenuComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/dishes.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MainComponent.js",["109","110","111"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/comments.js",[],["112","113"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/DishDetailComponent.js",["114","115","116","117","118","119","120","121"],"\nimport React, { Component } from 'react';\nimport { Card, CardImg,CardBody,CardTitle,CardText,Breadcrumb,BreadcrumbItem,Row,Col,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nfunction RenderDish({dish})\n{\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                        <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n            <Card>\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n             </div>\n        );\n\n}\nfunction RenderComments({comments, postComment, dishId}) {\n{\n    if(comments != null)\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                <Stagger in>\n\n                    {comments.map((comment) => {\n                        return(\n                            <li key={comment.id}>\n                                <p>{comment.comment}</p>\n                                <p>{`-- ${comment.author} , ${new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}`}</p>\n                            </li>\n                            \n                        )\n                    })}\n                    </Stagger>\n                </ul>\n                <CommentForm dishId={dishId} postComment={postComment} />\n\n            </div>\n        );\n        else\n        return(\n            <div></div>\n        );\n   }\n  }\n       \nclass CommentForm extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      isModalOpen: false\n      };\n      this.toggleModal = this.toggleModal.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  \n    handleSubmit(values) {\n      this.toggleModal();\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n            \n    }\n    render() {\n        return(\n      <div>\n      <Button outline onClick={this.toggleModal}>\n        <span className=\"fa fa-pencil\"></span> Submit Comment\n      </Button>\n      <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n        <ModalBody>\n          <LocalForm onSubmit={values => this.handleSubmit(values)}>\n          <Row className=\"form-group\">\n                                  <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                                  <Col md={10}>\n                                      <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                          className=\"form-control\"\n                                          defaultValue=\"1\">\n                                          <option value=\"1\">1</option>\n                                          <option value=\"2\">2</option>\n                                          <option value=\"3\">3</option>\n                                          <option value=\"4\">4</option>\n                                          <option value=\"5\">5</option>\n                                      </Control.select>\n                                  </Col>\n                              </Row>\n            <Row className=\"form-group\">\n              <Label htmlFor=\"author\" md={2}>\n                Your Name\n              </Label>\n              <Col md={10}>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  messages={{\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 characters or less\"\n                  }}\n                />\n              </Col>\n            </Row>\n\n            <Row className=\"form-group\">\n              <Label htmlFor=\"message\" md={2}>\n                Comment\n              </Label>\n              <Col md={10}>\n                <Control.textarea\n                  className=\"form-control\"\n                  id=\"comment\"\n                  model=\".comment\"\n                  name=\"comment\"\n                  rows=\"6\"\n                />\n              </Col>\n            </Row>\n\n            <Row className=\"form-group\">\n              <Col md={{ size: 12 }}>\n                <Button color=\"primary\" value=\"submit\">\n                  Submit\n                </Button>\n              </Col>\n            </Row>\n          </LocalForm>\n        </ModalBody>\n      </Modal>\n    </div>\n    );\n   }}\n\n\n\n    \n\n    const DishDetail = (props) => {\n        if (props.isLoading) {\n          return(\n              <div className=\"container\">\n                  <div className=\"row\">            \n                      <Loading />\n                  </div>\n              </div>\n          );\n      }\n      else if (props.errMess) {\n          return(\n              <div className=\"container\">\n                  <div className=\"row\">            \n                      <h4>{props.errMess}</h4>\n                  </div>\n              </div>\n          );\n      }\n      else if (props.dish != null) \n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish} />\n                </div>\n                <div className=\"col-12 col-md-5 m-1\">\n                <RenderComments comments={props.comments}\n                postComment={props.postComment}\n                dishId={props.dish.id}\n               />   \n                </div>\n            </div>\n            </div>\n        );\n        \n        else\n            return(\n                <div></div>\n            )\n    }\n\nexport default DishDetail;\n","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HeaderComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/FooterComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HomeComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/ContactComponent.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n            Button, FormGroup, Label, Input, Col ,Row,FormFeedback} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n       this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        // event.preventDefault();\n    }\n\n\n    render(){\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n\n        </div>\n    );\n    }\n}\n\nexport default Contact;","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/leaders.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/promotions.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/AboutComponent.js",["134"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/configureStore.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/dishes.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/promotions.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/leaders.js",["135"],"\nimport { LEADERS } from '../shared/leaders';\t\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\t   \n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\n\n        default:\t        \n            return state;\t          \n    }\t\n}    \n","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/comments.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/ActionCreators.js",["136"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/ActionTypes.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/LoadingComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/forms.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/baseUrl.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":42,"column":3,"nodeType":"148","messageId":"149","endLine":45,"endColumn":4},{"ruleId":"137","replacedBy":"150"},{"ruleId":"139","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"152","line":5,"column":5,"nodeType":"143","messageId":"144","endLine":5,"endColumn":9},{"ruleId":"141","severity":1,"message":"153","line":5,"column":11,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"154","line":5,"column":22,"nodeType":"143","messageId":"144","endLine":5,"endColumn":27},{"ruleId":"141","severity":1,"message":"155","line":9,"column":25,"nodeType":"143","messageId":"144","endLine":9,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":38,"column":1,"nodeType":"158","messageId":"159","endLine":65,"endColumn":5},{"ruleId":"160","severity":1,"message":"161","line":102,"column":39,"nodeType":"162","endLine":104,"endColumn":60},{"ruleId":"160","severity":1,"message":"163","line":118,"column":17,"nodeType":"162","endLine":128,"endColumn":19},{"ruleId":"160","severity":1,"message":"164","line":146,"column":17,"nodeType":"162","endLine":152,"endColumn":19},{"ruleId":"141","severity":1,"message":"153","line":3,"column":21,"nodeType":"143","messageId":"144","endLine":3,"endColumn":30},{"ruleId":"141","severity":1,"message":"154","line":3,"column":39,"nodeType":"143","messageId":"144","endLine":3,"endColumn":44},{"ruleId":"141","severity":1,"message":"165","line":3,"column":55,"nodeType":"143","messageId":"144","endLine":3,"endColumn":67},{"ruleId":"141","severity":1,"message":"166","line":5,"column":33,"nodeType":"143","messageId":"144","endLine":5,"endColumn":40},{"ruleId":"167","severity":1,"message":"168","line":62,"column":25,"nodeType":"162","endLine":62,"endColumn":67},{"ruleId":"160","severity":1,"message":"163","line":76,"column":37,"nodeType":"162","endLine":82,"endColumn":44},{"ruleId":"160","severity":1,"message":"163","line":98,"column":37,"nodeType":"162","endLine":104,"endColumn":44},{"ruleId":"160","severity":1,"message":"163","line":120,"column":37,"nodeType":"162","endLine":126,"endColumn":44},{"ruleId":"160","severity":1,"message":"163","line":143,"column":37,"nodeType":"162","endLine":149,"endColumn":44},{"ruleId":"160","severity":1,"message":"169","line":165,"column":45,"nodeType":"162","endLine":167,"endColumn":52},{"ruleId":"160","severity":1,"message":"161","line":173,"column":37,"nodeType":"162","endLine":174,"endColumn":66},{"ruleId":"160","severity":1,"message":"164","line":183,"column":37,"nodeType":"162","endLine":185,"endColumn":68},{"ruleId":"141","severity":1,"message":"170","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":23},{"ruleId":"141","severity":1,"message":"171","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":17},{"ruleId":"141","severity":1,"message":"172","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["173"],["174"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Fade' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'FormFeedback' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'FadeTransform' is defined but never used.","'LEADERS' is defined but never used.","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]