[{"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/index.js":"1","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/App.js":"2","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/reportWebVitals.js":"3","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MenuComponent.js":"4","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/dishes.js":"5","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MainComponent.js":"6","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/comments.js":"7","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/DishDetailComponent.js":"8","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HeaderComponent.js":"9","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/FooterComponent.js":"10","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HomeComponent.js":"11","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/ContactComponent.js":"12","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/leaders.js":"13","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/promotions.js":"14","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/AboutComponent.js":"15","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/configureStore.js":"16","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/reducer.js":"17"},{"size":639,"mtime":1607931508506,"results":"18","hashOfConfig":"19"},{"size":641,"mtime":1608042362928,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607494129199,"results":"21","hashOfConfig":"19"},{"size":1453,"mtime":1608021606356,"results":"22","hashOfConfig":"19"},{"size":1448,"mtime":1607946652522,"results":"23","hashOfConfig":"19"},{"size":2060,"mtime":1608042328705,"results":"24","hashOfConfig":"19"},{"size":4117,"mtime":1607946746240,"results":"25","hashOfConfig":"19"},{"size":6630,"mtime":1608100014209,"results":"26","hashOfConfig":"19"},{"size":4976,"mtime":1608038347116,"results":"27","hashOfConfig":"19"},{"size":2585,"mtime":1607943756331,"results":"28","hashOfConfig":"19"},{"size":1075,"mtime":1607946947464,"results":"29","hashOfConfig":"19"},{"size":10563,"mtime":1608097305457,"results":"30","hashOfConfig":"19"},{"size":2345,"mtime":1607946720702,"results":"31","hashOfConfig":"19"},{"size":435,"mtime":1607946682758,"results":"32","hashOfConfig":"19"},{"size":4352,"mtime":1608020826259,"results":"33","hashOfConfig":"19"},{"size":199,"mtime":1608042475368,"results":"34","hashOfConfig":"19"},{"size":390,"mtime":1608042362928,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17qtlam",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/index.js",[],["74","75"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/App.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/reportWebVitals.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MenuComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/dishes.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/MainComponent.js",["76","77","78"],"import React, { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishDetailComponent';\nimport About from \"./AboutComponent\";\nimport Home from './HomeComponent';\n\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Contact from './ContactComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    const HomePage = () => {\n      return(\n          <Home \n              dish={this.props.dishes.filter((dish) => dish.featured)[0]}\n              promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\n          />\n      );\n    }\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\n      );\n    };\n\n    const AboutPage = () => {\n      return <About leaders={this.props.leaders} />;\n    };\n    return (\n        <div>\n          <Header />\n          <Switch>\n              <Route path='/home' component={HomePage} />\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n              <Route exact path='/contactus' component={Contact} />\n              <Route path=\"/aboutus\" component={AboutPage} />\n              <Route path='/menu/:dishId' component={DishWithId} />\n              <Redirect to=\"/home\" />\n          </Switch>\n        <Footer />\n        </div>\n      \n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main));","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/comments.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/DishDetailComponent.js",["79","80","81","82","83","84"],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HeaderComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/FooterComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/HomeComponent.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/ContactComponent.js",["85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n            Button, Form, FormGroup, Label, Input, Col ,Row,FormFeedback} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n       this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    render(){\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n               </div>\n\n        </div>\n    );\n    }\n}\n\nexport default Contact;","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/leaders.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/shared/promotions.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/components/AboutComponent.js",["97"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <p>Leader {leader.name}</p>\n        );\n    });\n\n    const RenderLeader = ({ leaders }) => {\n        const leaders_list = leaders.map(leader => {\n          return (\n            <div key={leader.id} className=\"col-12 mt-3\">\n            <Media>\n            <Media left>\n              <Media object src={leader.image} alt={leader.name} />\n            </Media>\n            <Media body className=\"ml-2\">\n              <Media heading>{leader.name}</Media>\n              <p>{leader.designation}</p>\n              <p>{leader.abbr}</p>\n              <p>{leader.description}</p>\n            </Media>\n          </Media>\n        </div>\n      );\n    });\n    return <Media list>{leaders_list}</Media>;\n  };\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeader leaders={props.leaders} />                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/configureStore.js",[],"/Users/agniksaha/Documents/Web development/react-coursera/my-app/src/redux/reducer.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":2,"column":18,"nodeType":"104","messageId":"105","endLine":2,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":27,"column":3,"nodeType":"109","messageId":"110","endLine":30,"endColumn":4},{"ruleId":"102","severity":1,"message":"111","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":9},{"ruleId":"102","severity":1,"message":"112","line":5,"column":11,"nodeType":"104","messageId":"105","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"113","line":5,"column":22,"nodeType":"104","messageId":"105","endLine":5,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":46,"column":41,"nodeType":"116","endLine":48,"endColumn":62},{"ruleId":"114","severity":1,"message":"117","line":62,"column":19,"nodeType":"116","endLine":72,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":90,"column":19,"nodeType":"116","endLine":96,"endColumn":21},{"ruleId":"102","severity":1,"message":"111","line":3,"column":21,"nodeType":"104","messageId":"105","endLine":3,"endColumn":25},{"ruleId":"102","severity":1,"message":"112","line":3,"column":27,"nodeType":"104","messageId":"105","endLine":3,"endColumn":36},{"ruleId":"102","severity":1,"message":"113","line":3,"column":45,"nodeType":"104","messageId":"105","endLine":3,"endColumn":50},{"ruleId":"102","severity":1,"message":"119","line":3,"column":61,"nodeType":"104","messageId":"105","endLine":3,"endColumn":73},{"ruleId":"120","severity":1,"message":"121","line":59,"column":25,"nodeType":"116","endLine":59,"endColumn":67},{"ruleId":"114","severity":1,"message":"117","line":73,"column":37,"nodeType":"116","endLine":79,"endColumn":44},{"ruleId":"114","severity":1,"message":"117","line":95,"column":37,"nodeType":"116","endLine":101,"endColumn":44},{"ruleId":"114","severity":1,"message":"117","line":117,"column":37,"nodeType":"116","endLine":123,"endColumn":44},{"ruleId":"114","severity":1,"message":"117","line":140,"column":37,"nodeType":"116","endLine":146,"endColumn":44},{"ruleId":"114","severity":1,"message":"122","line":162,"column":45,"nodeType":"116","endLine":164,"endColumn":52},{"ruleId":"114","severity":1,"message":"115","line":170,"column":37,"nodeType":"116","endLine":171,"endColumn":66},{"ruleId":"114","severity":1,"message":"118","line":180,"column":37,"nodeType":"116","endLine":182,"endColumn":68},{"ruleId":"102","severity":1,"message":"123","line":7,"column":11,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'FormFeedback' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'leaders' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]